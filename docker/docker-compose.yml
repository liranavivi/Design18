# =============================================================================
# Design16 - Unified Docker Compose Configuration
# =============================================================================
# This file provides a complete infrastructure setup for the Design16 system
# including all required services for both EntitiesManager and Processors
# =============================================================================

services:
  # =============================================================================
  # DATABASE SERVICES
  # =============================================================================

  mongodb:
    image: mongo:7.0
    container_name: design16-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: EntitiesManagerDb
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - design16-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # =============================================================================
  # MESSAGE BROKER SERVICES
  # =============================================================================

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: design16-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - design16-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # =============================================================================
  # DISTRIBUTED CACHE SERVICES
  # =============================================================================

  hazelcast:
    image: hazelcast/hazelcast:5.3.6
    container_name: design16-hazelcast
    restart: unless-stopped
    ports:
      - "5701:5701"   # Hazelcast member port
      - "8080:8080"   # Management Center (if enabled)
    environment:
      # Cluster Configuration
      HZ_CLUSTERNAME: EntitiesManager
      HZ_NETWORK_PORT_PORT: 5701
      HZ_NETWORK_PORT_AUTOINCREMENT: true
      HZ_NETWORK_PORT_PORTCOUNT: 100

      # JVM Options - Use default config to avoid conflicts
      JAVA_OPTS: >-
        -Dhazelcast.shutdownhook.policy=GRACEFUL
        -Dhazelcast.shutdownhook.enabled=true
        -Dhazelcast.logging.type=slf4j
        -Dhazelcast.health.monitoring.level=NOISY
        -Dhazelcast.health.monitoring.delay.seconds=30
        -Xms512m
        -Xmx1g
    networks:
      - design16-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5701"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # =============================================================================
  # OBSERVABILITY SERVICES
  # =============================================================================

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: design16-otel-collector
    restart: unless-stopped
    command: ["--config=/etc/otel-collector-config.yaml"]
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics endpoint
      - "8889:8889"   # Prometheus exporter metrics
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    networks:
      - design16-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - hazelcast

# =============================================================================
# VOLUME DEFINITIONS
# =============================================================================

volumes:
  mongodb_data:
    driver: local
    name: design16_mongodb_data
  mongodb_config:
    driver: local
    name: design16_mongodb_config
  rabbitmq_data:
    driver: local
    name: design16_rabbitmq_data

# =============================================================================
# NETWORK DEFINITIONS
# =============================================================================

networks:
  design16-network:
    driver: bridge
    name: design16_network
    ipam:
      config:
        - subnet: 172.20.0.0/16

# =============================================================================
# USAGE INSTRUCTIONS
# =============================================================================
#
# To start all services:
#   docker-compose up -d
#
# To start specific services:
#   docker-compose up -d mongodb rabbitmq hazelcast
#
# To view logs:
#   docker-compose logs -f [service-name]
#
# To stop all services:
#   docker-compose down
#
# To stop and remove volumes:
#   docker-compose down -v
#
# Service URLs:
#   - MongoDB: mongodb://localhost:27017 (no authentication required)
#   - RabbitMQ Management: http://localhost:15672 (guest/guest)
#   - Hazelcast Management: http://localhost:8080
#   - OpenTelemetry Collector: http://localhost:4317 (gRPC), http://localhost:4318 (HTTP)
#   - Prometheus Metrics: http://localhost:8889/metrics
#
# EntitiesManager API (runs locally):
#   dotnet run --project src/Presentation/FlowOrchestrator.EntitiesManagers.Api/
#   Available at: http://localhost:5130 (dev) or http://localhost:5000 (prod)
#
# Processors (run locally):
#   dotnet run --project Processors/Processor.File.v3.2.1/
#   dotnet run --project Processors/Processor.File/
#
# =============================================================================
